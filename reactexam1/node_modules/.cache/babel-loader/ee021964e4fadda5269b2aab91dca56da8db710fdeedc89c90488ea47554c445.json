{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OddEvenResult = ({\n  count\n}) => {\n  console.log(count);\n  // count state를 props로 받아옴. counter라는 컴포넌트가 갖고있기 때문에 props로 받는 방법 밖에 없음 \n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count % 2 === 0 ? \"짝수\" : \"홀수\"\n  }, void 0, false);\n};\n\n// 부모가 내려주는 props가 변경되면 다시 렌더링을 함\n_c = OddEvenResult;\nexport default OddEvenResult;\nvar _c;\n$RefreshReg$(_c, \"OddEvenResult\");","map":{"version":3,"names":["OddEvenResult","count","console","log","_jsxDEV","_Fragment","children","_c","$RefreshReg$"],"sources":["/Users/songkyungmin/Study/React/reactexam1/src/OddEvenResult.js"],"sourcesContent":["const OddEvenResult = ({count}) => {\n    console.log(count);\n    // count state를 props로 받아옴. counter라는 컴포넌트가 갖고있기 때문에 props로 받는 방법 밖에 없음 \n    return <>{count % 2 === 0 ? \"짝수\" : \"홀수\"}</>;\n};\n\n// 부모가 내려주는 props가 변경되면 다시 렌더링을 함\n\nexport default OddEvenResult;"],"mappings":";;AAAA,MAAMA,aAAa,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAC/BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB;EACA,oBAAOG,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAAGL,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG;EAAI,gBAAG,CAAC;AAC/C,CAAC;;AAED;AAAAM,EAAA,GANMP,aAAa;AAQnB,eAAeA,aAAa;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}