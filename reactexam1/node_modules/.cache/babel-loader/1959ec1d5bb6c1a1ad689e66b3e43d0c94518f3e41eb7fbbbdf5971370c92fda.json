{"ast":null,"code":"var _jsxFileName = \"/Users/songkyungmin/Study/React/reactexam1/src/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n\n// Counter 컴포넌트에서는 부모에서 내려준 프랍스를 매개변수로 받아와 사용할 수 있음\n// 받는 쪽에서 객체를 비구조화 할당을 통해 받을 수도 있다. {initialValue}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = ({\n  initialValue\n}) => {\n  _s();\n  // props 매개변수가 객체 형식으로 출력됨(몇 개를 보내든 객체 안에 담겨옴)\n  // console.log(props); \n\n  // 0에서 출발, 1씩 증가, 감소하는 count 상태\n  const [count, setCount] = useState(initialValue);\n  // useState 메소드는 배열을 반환하고 배열의 비구조 할당을\n  // 통해서 0번째 인덱스 카운트, 1번째 인덱스를 setCount를 상수로 받아온 것을 확인할 수 있음\n  // 0번째 인덱스는 상태의 값으로 사용, setCount는 count라는 상태를 변화시키는 상태변화 함수로 사용\n  // useState를 호출하면서 넘겨주는 인자 0은 count라는 상태를 만드는 데에 초기값으로 사용됨\n\n  const onIncrease = () => {\n    setCount(count + 1);\n  };\n  const onDecrease = () => {\n    setCount(count - 1);\n  };\n\n  // 여러 개의 state를 하나의 컴포넌트가 가져도 전혀 문제 안됨\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onIncrease,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDecrease,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n// 부모 컴포넌트에서 initialValue를 내려주지 않더라도 defaultProps에 의해서 Counter 컴포넌트\n// 에서 받은 initialValue가 0으로 고정됨\n_s(Counter, \"anQBWt8gm5Alpw27Xf2pPZffWFg=\");\n_c = Counter;\nCounter.defaultProps = {\n  initialValue: 0\n};\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","initialValue","_s","count","setCount","onIncrease","onDecrease","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","defaultProps","$RefreshReg$"],"sources":["/Users/songkyungmin/Study/React/reactexam1/src/Counter.js"],"sourcesContent":["import React, {useState} from \"react\";\n\n// Counter 컴포넌트에서는 부모에서 내려준 프랍스를 매개변수로 받아와 사용할 수 있음\n// 받는 쪽에서 객체를 비구조화 할당을 통해 받을 수도 있다. {initialValue}\nconst Counter = ({initialValue}) => {\n\n// props 매개변수가 객체 형식으로 출력됨(몇 개를 보내든 객체 안에 담겨옴)\n// console.log(props); \n\n// 0에서 출발, 1씩 증가, 감소하는 count 상태\n    const [count, setCount] = useState(initialValue);\n    // useState 메소드는 배열을 반환하고 배열의 비구조 할당을\n    // 통해서 0번째 인덱스 카운트, 1번째 인덱스를 setCount를 상수로 받아온 것을 확인할 수 있음\n    // 0번째 인덱스는 상태의 값으로 사용, setCount는 count라는 상태를 변화시키는 상태변화 함수로 사용\n    // useState를 호출하면서 넘겨주는 인자 0은 count라는 상태를 만드는 데에 초기값으로 사용됨\n\n    const onIncrease = () => {\n        setCount(count+1);\n    };\n\n    const onDecrease = () => {\n        setCount(count-1);\n    };\n\n    // 여러 개의 state를 하나의 컴포넌트가 가져도 전혀 문제 안됨\n    return(\n        <div>\n            <h2>{count}</h2>\n            <button onClick={onIncrease}>+</button>\n            <button onClick={onDecrease}>-</button>\n        </div>\n    )\n};\n\n// 부모 컴포넌트에서 initialValue를 내려주지 않더라도 defaultProps에 의해서 Counter 컴포넌트\n// 에서 받은 initialValue가 0으로 고정됨\nCounter.defaultProps = {\n    initialValue:0\n}\n\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAEpC;EACA;;EAEA;EACI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACI,YAAY,CAAC;EAChD;EACA;EACA;EACA;;EAEA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACrBF,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,oBACIJ,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAAQ,QAAA,EAAKJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBZ,OAAA;MAAQa,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCZ,OAAA;MAAQa,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd,CAAC;;AAED;AACA;AAAAT,EAAA,CA/BMF,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAgCbA,OAAO,CAACc,YAAY,GAAG;EACnBb,YAAY,EAAC;AACjB,CAAC;AAED,eAAeD,OAAO;AAAC,IAAAa,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}