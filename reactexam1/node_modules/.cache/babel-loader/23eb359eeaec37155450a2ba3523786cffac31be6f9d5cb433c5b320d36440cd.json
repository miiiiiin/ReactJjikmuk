{"ast":null,"code":"var _jsxFileName = \"/Users/songkyungmin/Study/React/reactexam1/src/App.js\";\nimport './App.css';\nimport MyHeader from './MyHeader'; // 컴포넌트 사용 위해 모듈 불러오기\nimport MyFooter from './MyFooter';\nimport Counter from './Counter';\n\n// react.fragment로 최상위 태그 대체 가능\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let name = \"민송경\";\n\n  // css에서는 _였는데 여기서는 카멜케이스로\n  const style = {\n    App: {\n      backgroundColor: 'black'\n    },\n    h2: {\n      color: \"red\"\n    },\n    bold_text: {\n      color: \"green\"\n    }\n  };\n  const func = () => {\n    return 'func';\n  };\n\n  // 객체를 펼쳐서 전달하는 스프레드 연산자를 통해 전달 가능 {... counterProps}\n  const counterProps = {\n    a: 1,\n    b: 2,\n    c: 3,\n    d: 4,\n    e: 5\n    // initialValue:5,\n  };\n\n  return (\n    /*#__PURE__*/\n    // <React.Fragment>\n    // <div className=\"App\">\n    // <div style={style.App}>\n    _jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MyHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: style.h2,\n            children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"src/App.js\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 16\n            }, this), \" and save to reload. \", func()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"App-link\",\n            href: \"https://reactjs.org\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Learn React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          ...counterProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MyFooter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n    // <React.Fragment/>\n  );\n\n  // 자식 컴포넌트인 Counter 컴포넌트에 initalValue라는 이름을 붙여 5라는 값을 전달\n  // 부모 컴포넌트의 App 컴포넌트에서 자식 컴포넌트인 Counter 컴포넌트에게 어떤 값을 이름 붙여 전달하는 방식\n  // Props\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MyHeader","MyFooter","Counter","React","jsxDEV","_jsxDEV","App","name","style","backgroundColor","h2","color","bold_text","func","counterProps","a","b","c","d","e","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/songkyungmin/Study/React/reactexam1/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport MyHeader from './MyHeader' // 컴포넌트 사용 위해 모듈 불러오기\nimport MyFooter from './MyFooter'\nimport Counter from './Counter'\n\n// react.fragment로 최상위 태그 대체 가능\nimport React from 'react';\n\nfunction App() {\n\n  let name = \"민송경\"\n\n  // css에서는 _였는데 여기서는 카멜케이스로\n  const style = {\n    App : {\n       backgroundColor: 'black'\n    },\n    h2: {\n      color: \"red\"\n    },\n    bold_text: {\n      color: \"green\"\n    }\n  }\n\n  const func = () => {\n    return 'func';\n  };\n\n  // 객체를 펼쳐서 전달하는 스프레드 연산자를 통해 전달 가능 {... counterProps}\n  const counterProps = {\n    a:1,\n    b:2,\n    c:3,\n    d:4,\n    e:5,\n    // initialValue:5,\n  }\n\n  return (\n    // <React.Fragment>\n    // <div className=\"App\">\n    // <div style={style.App}>\n    <Container>\n    <div>\n      <MyHeader/>\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <p style={style.h2}>\n          Edit <code>src/App.js</code> and save to reload. {func()}\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        {/* <b style={style.bold_text} b id=\"bold_text\">{number}는: {number % 2 === 0 ? \"짝수\" : \"홀수\"} </b> */}\n      </header>\n      <Counter {... counterProps}/>\n      <MyFooter/>\n     </div>\n     </Container>\n    // <React.Fragment/>\n  );\n\n  // 자식 컴포넌트인 Counter 컴포넌트에 initalValue라는 이름을 붙여 5라는 값을 전달\n  // 부모 컴포넌트의 App 컴포넌트에서 자식 컴포넌트인 Counter 컴포넌트에게 어떤 값을 이름 붙여 전달하는 방식\n  // Props\n}\n\nexport default App;\n"],"mappings":";AACA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,YAAY,EAAC;AAClC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;;AAE/B;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAEb,IAAIC,IAAI,GAAG,KAAK;;EAEhB;EACA,MAAMC,KAAK,GAAG;IACZF,GAAG,EAAG;MACHG,eAAe,EAAE;IACpB,CAAC;IACDC,EAAE,EAAE;MACFC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE;MACTD,KAAK,EAAE;IACT;EACF,CAAC;EAED,MAAME,IAAI,GAAGA,CAAA,KAAM;IACjB,OAAO,MAAM;EACf,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACnBC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC,CAAC;IACHC,CAAC,EAAC;IACF;EACF,CAAC;;EAED;IAAA;IACE;IACA;IACA;IACAd,OAAA,CAACe,SAAS;MAAAC,QAAA,eACVhB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA,CAACL,QAAQ;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACXpB,OAAA;UAAQqB,SAAS,EAAC,YAAY;UAAAL,QAAA,gBAE5BhB,OAAA;YAAGG,KAAK,EAAEA,KAAK,CAACE,EAAG;YAAAW,QAAA,GAAC,OACb,eAAAhB,OAAA;cAAAgB,QAAA,EAAM;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,yBAAqB,EAACZ,IAAI,CAAC,CAAC;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,eACJpB,OAAA;YACEqB,SAAS,EAAC,UAAU;YACpBC,IAAI,EAAC,qBAAqB;YAC1BC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YAAAR,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEE,CAAC,eACTpB,OAAA,CAACH,OAAO;UAAA,GAAMY;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7BpB,OAAA,CAACJ,QAAQ;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;IACZ;EAAA;;EAGF;EACA;EACA;AACF;AAACK,EAAA,GA/DQxB,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}