{"ast":null,"code":"var _jsxFileName = \"/Users/songkyungmin/Study/React/reactexam1/src/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  console.log(\"count 호출!\");\n\n  // 0에서 출발, 1씩 증가, 감소하는 count 상태\n  const [count, setCount] = useState(0);\n  // useState 메소드는 배열을 반환하고 배열의 비구조 할당을\n  // 통해서 0번째 인덱스 카운트, 1번째 인덱스를 setCount를 상수로 받아온 것을 확인할 수 있음\n  // 0번째 인덱스는 상태의 값으로 사용, setCount는 count라는 상태를 변화시키는 상태변화 함수로 사용\n  // useState를 호출하면서 넘겨주는 인자 0은 count라는 상태를 만드는 데에 초기값으로 사용됨\n\n  const [count2, setCount2] = useState(0);\n  const onIncrease = () => {\n    setCount(count + 1);\n  };\n  const onDecrease = () => {\n    setCount(count - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onIncrease,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDecrease,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Counter, \"pXB2Bwaqd1DonK1TeTeTlzaH1UQ=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","_s","console","log","count","setCount","count2","setCount2","onIncrease","onDecrease","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/songkyungmin/Study/React/reactexam1/src/Counter.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nconst Counter = () => {\n\nconsole.log(\"count 호출!\")\n\n// 0에서 출발, 1씩 증가, 감소하는 count 상태\n    const [count, setCount] = useState(0)\n    // useState 메소드는 배열을 반환하고 배열의 비구조 할당을\n    // 통해서 0번째 인덱스 카운트, 1번째 인덱스를 setCount를 상수로 받아온 것을 확인할 수 있음\n    // 0번째 인덱스는 상태의 값으로 사용, setCount는 count라는 상태를 변화시키는 상태변화 함수로 사용\n    // useState를 호출하면서 넘겨주는 인자 0은 count라는 상태를 만드는 데에 초기값으로 사용됨\n\n    const [count2, setCount2] = useState(0);\n\n    const onIncrease = () => {\n        setCount(count+1);\n    };\n\n    const onDecrease = () => {\n        setCount(count-1);\n    };\n\n    return(\n        <div>\n            <h2>{count}</h2>\n            <button onClick={onIncrease}>+</button>\n            <button onClick={onDecrease}>-</button>\n        </div>\n    )\n};\n\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtBC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;EAExB;EACI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA;EACA;EACA;;EAEA,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACrBH,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACrBJ,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAKN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBf,OAAA;MAAQgB,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvCf,OAAA;MAAQgB,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd,CAAC;AAACb,EAAA,CA5BID,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}